{
  "/Users/psturc/dev/tia-js/examples/basic-jest/src/server.ts": {
    "path": "/Users/psturc/dev/tia-js/examples/basic-jest/src/server.ts",
    "statementMap": {
      "0": {
        "start": {
          "line": 6,
          "column": 22
        },
        "end": {
          "line": 8,
          "column": 1
        }
      },
      "1": {
        "start": {
          "line": 7,
          "column": 4
        },
        "end": {
          "line": 7,
          "column": 62
        }
      },
      "2": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 9,
          "column": 62
        }
      },
      "3": {
        "start": {
          "line": 10,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 21
        }
      },
      "4": {
        "start": {
          "line": 11,
          "column": 18
        },
        "end": {
          "line": 11,
          "column": 53
        }
      },
      "5": {
        "start": {
          "line": 12,
          "column": 23
        },
        "end": {
          "line": 12,
          "column": 48
        }
      },
      "6": {
        "start": {
          "line": 13,
          "column": 24
        },
        "end": {
          "line": 13,
          "column": 50
        }
      },
      "7": {
        "start": {
          "line": 14,
          "column": 12
        },
        "end": {
          "line": 14,
          "column": 36
        }
      },
      "8": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 18
        }
      },
      "9": {
        "start": {
          "line": 16,
          "column": 0
        },
        "end": {
          "line": 16,
          "column": 34
        }
      },
      "10": {
        "start": {
          "line": 18,
          "column": 20
        },
        "end": {
          "line": 18,
          "column": 52
        }
      },
      "11": {
        "start": {
          "line": 19,
          "column": 21
        },
        "end": {
          "line": 19,
          "column": 55
        }
      },
      "12": {
        "start": {
          "line": 23,
          "column": 0
        },
        "end": {
          "line": 29,
          "column": 3
        }
      },
      "13": {
        "start": {
          "line": 24,
          "column": 4
        },
        "end": {
          "line": 28,
          "column": 7
        }
      },
      "14": {
        "start": {
          "line": 33,
          "column": 0
        },
        "end": {
          "line": 42,
          "column": 3
        }
      },
      "15": {
        "start": {
          "line": 34,
          "column": 4
        },
        "end": {
          "line": 41,
          "column": 5
        }
      },
      "16": {
        "start": {
          "line": 35,
          "column": 23
        },
        "end": {
          "line": 35,
          "column": 46
        }
      },
      "17": {
        "start": {
          "line": 36,
          "column": 21
        },
        "end": {
          "line": 36,
          "column": 58
        }
      },
      "18": {
        "start": {
          "line": 37,
          "column": 8
        },
        "end": {
          "line": 37,
          "column": 23
        }
      },
      "19": {
        "start": {
          "line": 40,
          "column": 8
        },
        "end": {
          "line": 40,
          "column": 58
        }
      },
      "20": {
        "start": {
          "line": 43,
          "column": 0
        },
        "end": {
          "line": 52,
          "column": 3
        }
      },
      "21": {
        "start": {
          "line": 44,
          "column": 4
        },
        "end": {
          "line": 51,
          "column": 5
        }
      },
      "22": {
        "start": {
          "line": 45,
          "column": 25
        },
        "end": {
          "line": 45,
          "column": 33
        }
      },
      "23": {
        "start": {
          "line": 46,
          "column": 21
        },
        "end": {
          "line": 46,
          "column": 59
        }
      },
      "24": {
        "start": {
          "line": 47,
          "column": 8
        },
        "end": {
          "line": 47,
          "column": 35
        }
      },
      "25": {
        "start": {
          "line": 50,
          "column": 8
        },
        "end": {
          "line": 50,
          "column": 61
        }
      },
      "26": {
        "start": {
          "line": 56,
          "column": 0
        },
        "end": {
          "line": 65,
          "column": 3
        }
      },
      "27": {
        "start": {
          "line": 57,
          "column": 4
        },
        "end": {
          "line": 64,
          "column": 5
        }
      },
      "28": {
        "start": {
          "line": 58,
          "column": 24
        },
        "end": {
          "line": 58,
          "column": 47
        }
      },
      "29": {
        "start": {
          "line": 59,
          "column": 22
        },
        "end": {
          "line": 59,
          "column": 62
        }
      },
      "30": {
        "start": {
          "line": 60,
          "column": 8
        },
        "end": {
          "line": 60,
          "column": 24
        }
      },
      "31": {
        "start": {
          "line": 63,
          "column": 8
        },
        "end": {
          "line": 63,
          "column": 59
        }
      },
      "32": {
        "start": {
          "line": 66,
          "column": 0
        },
        "end": {
          "line": 75,
          "column": 3
        }
      },
      "33": {
        "start": {
          "line": 67,
          "column": 4
        },
        "end": {
          "line": 74,
          "column": 5
        }
      },
      "34": {
        "start": {
          "line": 68,
          "column": 26
        },
        "end": {
          "line": 68,
          "column": 34
        }
      },
      "35": {
        "start": {
          "line": 69,
          "column": 22
        },
        "end": {
          "line": 69,
          "column": 63
        }
      },
      "36": {
        "start": {
          "line": 70,
          "column": 8
        },
        "end": {
          "line": 70,
          "column": 36
        }
      },
      "37": {
        "start": {
          "line": 73,
          "column": 8
        },
        "end": {
          "line": 73,
          "column": 62
        }
      },
      "38": {
        "start": {
          "line": 77,
          "column": 0
        },
        "end": {
          "line": 82,
          "column": 1
        }
      },
      "39": {
        "start": {
          "line": 78,
          "column": 17
        },
        "end": {
          "line": 78,
          "column": 41
        }
      },
      "40": {
        "start": {
          "line": 79,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 7
        }
      },
      "41": {
        "start": {
          "line": 80,
          "column": 8
        },
        "end": {
          "line": 80,
          "column": 54
        }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": {
            "line": 6,
            "column": 56
          },
          "end": {
            "line": 6,
            "column": 57
          }
        },
        "loc": {
          "start": {
            "line": 6,
            "column": 71
          },
          "end": {
            "line": 8,
            "column": 1
          }
        },
        "line": 6
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": {
            "line": 23,
            "column": 19
          },
          "end": {
            "line": 23,
            "column": 20
          }
        },
        "loc": {
          "start": {
            "line": 23,
            "column": 33
          },
          "end": {
            "line": 29,
            "column": 1
          }
        },
        "line": 23
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": {
          "start": {
            "line": 33,
            "column": 22
          },
          "end": {
            "line": 33,
            "column": 23
          }
        },
        "loc": {
          "start": {
            "line": 33,
            "column": 42
          },
          "end": {
            "line": 42,
            "column": 1
          }
        },
        "line": 33
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": {
          "start": {
            "line": 43,
            "column": 19
          },
          "end": {
            "line": 43,
            "column": 20
          }
        },
        "loc": {
          "start": {
            "line": 43,
            "column": 39
          },
          "end": {
            "line": 52,
            "column": 1
          }
        },
        "line": 43
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": {
          "start": {
            "line": 56,
            "column": 23
          },
          "end": {
            "line": 56,
            "column": 24
          }
        },
        "loc": {
          "start": {
            "line": 56,
            "column": 43
          },
          "end": {
            "line": 65,
            "column": 1
          }
        },
        "line": 56
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": {
          "start": {
            "line": 66,
            "column": 20
          },
          "end": {
            "line": 66,
            "column": 21
          }
        },
        "loc": {
          "start": {
            "line": 66,
            "column": 40
          },
          "end": {
            "line": 75,
            "column": 1
          }
        },
        "line": 66
      },
      "6": {
        "name": "(anonymous_6)",
        "decl": {
          "start": {
            "line": 79,
            "column": 21
          },
          "end": {
            "line": 79,
            "column": 22
          }
        },
        "loc": {
          "start": {
            "line": 79,
            "column": 27
          },
          "end": {
            "line": 81,
            "column": 5
          }
        },
        "line": 79
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": {
            "line": 6,
            "column": 22
          },
          "end": {
            "line": 8,
            "column": 1
          }
        },
        "type": "binary-expr",
        "locations": [
          {
            "start": {
              "line": 6,
              "column": 23
            },
            "end": {
              "line": 6,
              "column": 27
            }
          },
          {
            "start": {
              "line": 6,
              "column": 31
            },
            "end": {
              "line": 6,
              "column": 51
            }
          },
          {
            "start": {
              "line": 6,
              "column": 56
            },
            "end": {
              "line": 8,
              "column": 1
            }
          }
        ],
        "line": 6
      },
      "1": {
        "loc": {
          "start": {
            "line": 7,
            "column": 11
          },
          "end": {
            "line": 7,
            "column": 61
          }
        },
        "type": "cond-expr",
        "locations": [
          {
            "start": {
              "line": 7,
              "column": 37
            },
            "end": {
              "line": 7,
              "column": 40
            }
          },
          {
            "start": {
              "line": 7,
              "column": 43
            },
            "end": {
              "line": 7,
              "column": 61
            }
          }
        ],
        "line": 7
      },
      "2": {
        "loc": {
          "start": {
            "line": 7,
            "column": 12
          },
          "end": {
            "line": 7,
            "column": 33
          }
        },
        "type": "binary-expr",
        "locations": [
          {
            "start": {
              "line": 7,
              "column": 12
            },
            "end": {
              "line": 7,
              "column": 15
            }
          },
          {
            "start": {
              "line": 7,
              "column": 19
            },
            "end": {
              "line": 7,
              "column": 33
            }
          }
        ],
        "line": 7
      },
      "3": {
        "loc": {
          "start": {
            "line": 77,
            "column": 0
          },
          "end": {
            "line": 82,
            "column": 1
          }
        },
        "type": "if",
        "locations": [
          {
            "start": {
              "line": 77,
              "column": 0
            },
            "end": {
              "line": 82,
              "column": 1
            }
          },
          {
            "start": {},
            "end": {}
          }
        ],
        "line": 77
      },
      "4": {
        "loc": {
          "start": {
            "line": 78,
            "column": 17
          },
          "end": {
            "line": 78,
            "column": 41
          }
        },
        "type": "binary-expr",
        "locations": [
          {
            "start": {
              "line": 78,
              "column": 17
            },
            "end": {
              "line": 78,
              "column": 33
            }
          },
          {
            "start": {
              "line": 78,
              "column": 37
            },
            "end": {
              "line": 78,
              "column": 41
            }
          }
        ],
        "line": 78
      }
    },
    "s": {
      "0": 1,
      "1": 1,
      "2": 1,
      "3": 1,
      "4": 1,
      "5": 1,
      "6": 1,
      "7": 1,
      "8": 1,
      "9": 1,
      "10": 1,
      "11": 1,
      "12": 1,
      "13": 0,
      "14": 1,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 1,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 1,
      "27": 2,
      "28": 2,
      "29": 2,
      "30": 1,
      "31": 1,
      "32": 1,
      "33": 2,
      "34": 2,
      "35": 2,
      "36": 2,
      "37": 0,
      "38": 1,
      "39": 0,
      "40": 0,
      "41": 0
    },
    "f": {
      "0": 1,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 2,
      "5": 2,
      "6": 0
    },
    "b": {
      "0": [
        1,
        1,
        1
      ],
      "1": [
        0,
        1
      ],
      "2": [
        1,
        1
      ],
      "3": [
        0,
        1
      ],
      "4": [
        0,
        0
      ]
    },
    "inputSourceMap": {
      "file": "/Users/psturc/dev/tia-js/examples/basic-jest/src/server.ts",
      "mappings": "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",
      "names": [],
      "sources": [
        "/Users/psturc/dev/tia-js/examples/basic-jest/src/server.ts"
      ],
      "sourcesContent": [
        "/**\n * Simple Node.js server for TIA demonstration\n * Two distinct endpoints with separate business logic\n */\n\nimport express from 'express';\nimport { UserService } from './user-service';\nimport { OrderService } from './order-service';\n\nconst app = express();\napp.use(express.json());\n\n// Initialize services\nconst userService = new UserService();\nconst orderService = new OrderService();\n\n/**\n * Health check endpoint - covered by health tests\n */\napp.get('/health', (req, res) => {\n  res.json({ \n    status: 'healthy',\n    timestamp: new Date().toISOString(),\n    uptime: process.uptime()\n  });\n});\n\n/**\n * User management endpoints - covered by user tests\n */\napp.get('/users/:id', async (req, res) => {\n  try {\n    const userId = parseInt(req.params.id);\n    const user = await userService.getUserById(userId);\n    res.json(user);\n  } catch (error) {\n    res.status(404).json({ error: 'User not found' });\n  }\n});\n\napp.post('/users', async (req, res) => {\n  try {\n    const userData = req.body;\n    const user = await userService.createUser(userData);\n    res.status(201).json(user);\n  } catch (error) {\n    res.status(400).json({ error: 'Invalid user data' });\n  }\n});\n\n/**\n * Order management endpoints - covered by order tests\n */\napp.get('/orders/:id', async (req, res) => {\n  try {\n    const orderId = parseInt(req.params.id);\n    const order = await orderService.getOrderById(orderId);\n    res.json(order);\n  } catch (error) {\n    res.status(404).json({ error: 'Order not found' });\n  }\n});\n\napp.post('/orders', async (req, res) => {\n  try {\n    const orderData = req.body;\n    const order = await orderService.createOrder(orderData);\n    res.status(201).json(order);\n  } catch (error) {\n    res.status(400).json({ error: 'Invalid order data' });\n  }\n});\n\n// Export app for testing, but don't start server automatically\nexport { app };\n\n// Only start server if this file is run directly (not during tests)\nif (require.main === module) {\n  const PORT = process.env.PORT || 3000;\n  app.listen(PORT, () => {\n    console.log(`Server running on port ${PORT}`);\n  });\n}\n"
      ],
      "version": 3
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "ae8256d76ccce87574b6c109fa2370c0df0673af"
  },
  "/Users/psturc/dev/tia-js/examples/basic-jest/src/user-service.ts": {
    "path": "/Users/psturc/dev/tia-js/examples/basic-jest/src/user-service.ts",
    "statementMap": {
      "0": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 6,
          "column": 62
        }
      },
      "1": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 29
        }
      },
      "2": {
        "start": {
          "line": 10,
          "column": 8
        },
        "end": {
          "line": 10,
          "column": 31
        }
      },
      "3": {
        "start": {
          "line": 11,
          "column": 8
        },
        "end": {
          "line": 11,
          "column": 24
        }
      },
      "4": {
        "start": {
          "line": 14,
          "column": 8
        },
        "end": {
          "line": 14,
          "column": 52
        }
      },
      "5": {
        "start": {
          "line": 15,
          "column": 21
        },
        "end": {
          "line": 15,
          "column": 39
        }
      },
      "6": {
        "start": {
          "line": 16,
          "column": 8
        },
        "end": {
          "line": 18,
          "column": 9
        }
      },
      "7": {
        "start": {
          "line": 17,
          "column": 12
        },
        "end": {
          "line": 17,
          "column": 60
        }
      },
      "8": {
        "start": {
          "line": 19,
          "column": 8
        },
        "end": {
          "line": 19,
          "column": 20
        }
      },
      "9": {
        "start": {
          "line": 23,
          "column": 8
        },
        "end": {
          "line": 25,
          "column": 9
        }
      },
      "10": {
        "start": {
          "line": 24,
          "column": 12
        },
        "end": {
          "line": 24,
          "column": 59
        }
      },
      "11": {
        "start": {
          "line": 26,
          "column": 8
        },
        "end": {
          "line": 28,
          "column": 9
        }
      },
      "12": {
        "start": {
          "line": 27,
          "column": 12
        },
        "end": {
          "line": 27,
          "column": 52
        }
      },
      "13": {
        "start": {
          "line": 29,
          "column": 21
        },
        "end": {
          "line": 34,
          "column": 9
        }
      },
      "14": {
        "start": {
          "line": 35,
          "column": 8
        },
        "end": {
          "line": 35,
          "column": 38
        }
      },
      "15": {
        "start": {
          "line": 36,
          "column": 8
        },
        "end": {
          "line": 36,
          "column": 66
        }
      },
      "16": {
        "start": {
          "line": 37,
          "column": 8
        },
        "end": {
          "line": 37,
          "column": 20
        }
      },
      "17": {
        "start": {
          "line": 40,
          "column": 8
        },
        "end": {
          "line": 40,
          "column": 47
        }
      },
      "18": {
        "start": {
          "line": 43,
          "column": 27
        },
        "end": {
          "line": 43,
          "column": 55
        }
      },
      "19": {
        "start": {
          "line": 44,
          "column": 8
        },
        "end": {
          "line": 44,
          "column": 38
        }
      },
      "20": {
        "start": {
          "line": 47,
          "column": 24
        },
        "end": {
          "line": 47,
          "column": 45
        }
      },
      "21": {
        "start": {
          "line": 48,
          "column": 8
        },
        "end": {
          "line": 50,
          "column": 9
        }
      },
      "22": {
        "start": {
          "line": 49,
          "column": 12
        },
        "end": {
          "line": 49,
          "column": 55
        }
      },
      "23": {
        "start": {
          "line": 51,
          "column": 8
        },
        "end": {
          "line": 51,
          "column": 23
        }
      },
      "24": {
        "start": {
          "line": 54,
          "column": 0
        },
        "end": {
          "line": 54,
          "column": 34
        }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": {
            "line": 9,
            "column": 4
          },
          "end": {
            "line": 9,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 9,
            "column": 18
          },
          "end": {
            "line": 12,
            "column": 5
          }
        },
        "line": 9
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": {
            "line": 13,
            "column": 4
          },
          "end": {
            "line": 13,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 13,
            "column": 26
          },
          "end": {
            "line": 20,
            "column": 5
          }
        },
        "line": 13
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": {
          "start": {
            "line": 21,
            "column": 4
          },
          "end": {
            "line": 21,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 21,
            "column": 31
          },
          "end": {
            "line": 38,
            "column": 5
          }
        },
        "line": 21
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": {
          "start": {
            "line": 39,
            "column": 4
          },
          "end": {
            "line": 39,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 39,
            "column": 24
          },
          "end": {
            "line": 41,
            "column": 5
          }
        },
        "line": 39
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": {
          "start": {
            "line": 42,
            "column": 4
          },
          "end": {
            "line": 42,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 42,
            "column": 24
          },
          "end": {
            "line": 45,
            "column": 5
          }
        },
        "line": 42
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": {
          "start": {
            "line": 46,
            "column": 4
          },
          "end": {
            "line": 46,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 46,
            "column": 25
          },
          "end": {
            "line": 52,
            "column": 5
          }
        },
        "line": 46
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": {
            "line": 16,
            "column": 8
          },
          "end": {
            "line": 18,
            "column": 9
          }
        },
        "type": "if",
        "locations": [
          {
            "start": {
              "line": 16,
              "column": 8
            },
            "end": {
              "line": 18,
              "column": 9
            }
          },
          {
            "start": {},
            "end": {}
          }
        ],
        "line": 16
      },
      "1": {
        "loc": {
          "start": {
            "line": 23,
            "column": 8
          },
          "end": {
            "line": 25,
            "column": 9
          }
        },
        "type": "if",
        "locations": [
          {
            "start": {
              "line": 23,
              "column": 8
            },
            "end": {
              "line": 25,
              "column": 9
            }
          },
          {
            "start": {},
            "end": {}
          }
        ],
        "line": 23
      },
      "2": {
        "loc": {
          "start": {
            "line": 23,
            "column": 12
          },
          "end": {
            "line": 23,
            "column": 45
          }
        },
        "type": "binary-expr",
        "locations": [
          {
            "start": {
              "line": 23,
              "column": 12
            },
            "end": {
              "line": 23,
              "column": 26
            }
          },
          {
            "start": {
              "line": 23,
              "column": 30
            },
            "end": {
              "line": 23,
              "column": 45
            }
          }
        ],
        "line": 23
      },
      "3": {
        "loc": {
          "start": {
            "line": 26,
            "column": 8
          },
          "end": {
            "line": 28,
            "column": 9
          }
        },
        "type": "if",
        "locations": [
          {
            "start": {
              "line": 26,
              "column": 8
            },
            "end": {
              "line": 28,
              "column": 9
            }
          },
          {
            "start": {},
            "end": {}
          }
        ],
        "line": 26
      },
      "4": {
        "loc": {
          "start": {
            "line": 48,
            "column": 8
          },
          "end": {
            "line": 50,
            "column": 9
          }
        },
        "type": "if",
        "locations": [
          {
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 50,
              "column": 9
            }
          },
          {
            "start": {},
            "end": {}
          }
        ],
        "line": 48
      }
    },
    "s": {
      "0": 1,
      "1": 1,
      "2": 1,
      "3": 1,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 1
    },
    "f": {
      "0": 1,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    "b": {
      "0": [
        0,
        0
      ],
      "1": [
        0,
        0
      ],
      "2": [
        0,
        0
      ],
      "3": [
        0,
        0
      ],
      "4": [
        0,
        0
      ]
    },
    "inputSourceMap": {
      "file": "/Users/psturc/dev/tia-js/examples/basic-jest/src/user-service.ts",
      "mappings": ";AAAA;;;GAGG;;;AASH,MAAa,WAAW;IAAxB;QACU,UAAK,GAAsB,IAAI,GAAG,EAAE,CAAC;QACrC,WAAM,GAAG,CAAC,CAAC;IAoDrB,CAAC;IAlDC,KAAK,CAAC,WAAW,CAAC,EAAU;QAC1B,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC;QAE5C,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,MAAM,IAAI,KAAK,CAAC,gBAAgB,EAAE,YAAY,CAAC,CAAC;QAClD,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,QAAyC;QACxD,qBAAqB;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACtC,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;QACjD,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YACvC,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAC1C,CAAC;QAED,MAAM,IAAI,GAAS;YACjB,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE;YACjB,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;SACpC,CAAC;QAEF,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,iBAAiB,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QAE1D,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,WAAW;QACf,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;IACzC,CAAC;IAEO,YAAY,CAAC,KAAa;QAChC,MAAM,UAAU,GAAG,4BAA4B,CAAC;QAChD,OAAO,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,EAAU;QACzB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACtC,IAAI,OAAO,EAAE,CAAC;YACZ,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,EAAE,CAAC,CAAC;QAC7C,CAAC;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;CACF;AAtDD,kCAsDC",
      "names": [],
      "sources": [
        "/Users/psturc/dev/tia-js/examples/basic-jest/src/user-service.ts"
      ],
      "sourcesContent": [
        "/**\n * User Service - Business logic for user management\n * This should only be covered by user-related tests\n */\n\nexport interface User {\n  id: number;\n  name: string;\n  email: string;\n  createdAt: string;\n}\n\nexport class UserService {\n  private users: Map<number, User> = new Map();\n  private nextId = 1;\n\n  async getUserById(id: number): Promise<User> {\n    console.log(`Fetching user with ID: ${id}`);\n    \n    const user = this.users.get(id);\n    if (!user) {\n      throw new Error(`User with ID ${id} not found`);\n    }\n    \n    return user;\n  }\n\n  async createUser(userData: { name: string; email: string }): Promise<User> {\n    // Validate user data\n    if (!userData.name || !userData.email) {\n      throw new Error('Name and email are required');\n    }\n\n    if (!this.isValidEmail(userData.email)) {\n      throw new Error('Invalid email format');\n    }\n\n    const user: User = {\n      id: this.nextId++,\n      name: userData.name,\n      email: userData.email,\n      createdAt: new Date().toISOString()\n    };\n\n    this.users.set(user.id, user);\n    console.log(`Created user: ${user.name} (${user.email})`);\n    \n    return user;\n  }\n\n  async getAllUsers(): Promise<User[]> {\n    return Array.from(this.users.values());\n  }\n\n  private isValidEmail(email: string): boolean {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  }\n\n  async deleteUser(id: number): Promise<boolean> {\n    const deleted = this.users.delete(id);\n    if (deleted) {\n      console.log(`Deleted user with ID: ${id}`);\n    }\n    return deleted;\n  }\n}\n"
      ],
      "version": 3
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "df7aa5fc4d482a16beab0b099929b701f8aec9ef"
  },
  "/Users/psturc/dev/tia-js/examples/basic-jest/src/order-service.ts": {
    "path": "/Users/psturc/dev/tia-js/examples/basic-jest/src/order-service.ts",
    "statementMap": {
      "0": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 6,
          "column": 62
        }
      },
      "1": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 30
        }
      },
      "2": {
        "start": {
          "line": 10,
          "column": 8
        },
        "end": {
          "line": 10,
          "column": 32
        }
      },
      "3": {
        "start": {
          "line": 11,
          "column": 8
        },
        "end": {
          "line": 11,
          "column": 24
        }
      },
      "4": {
        "start": {
          "line": 14,
          "column": 8
        },
        "end": {
          "line": 14,
          "column": 53
        }
      },
      "5": {
        "start": {
          "line": 15,
          "column": 22
        },
        "end": {
          "line": 15,
          "column": 41
        }
      },
      "6": {
        "start": {
          "line": 16,
          "column": 8
        },
        "end": {
          "line": 18,
          "column": 9
        }
      },
      "7": {
        "start": {
          "line": 17,
          "column": 12
        },
        "end": {
          "line": 17,
          "column": 61
        }
      },
      "8": {
        "start": {
          "line": 19,
          "column": 8
        },
        "end": {
          "line": 19,
          "column": 21
        }
      },
      "9": {
        "start": {
          "line": 23,
          "column": 8
        },
        "end": {
          "line": 25,
          "column": 9
        }
      },
      "10": {
        "start": {
          "line": 24,
          "column": 12
        },
        "end": {
          "line": 24,
          "column": 62
        }
      },
      "11": {
        "start": {
          "line": 27,
          "column": 22
        },
        "end": {
          "line": 27,
          "column": 63
        }
      },
      "12": {
        "start": {
          "line": 28,
          "column": 22
        },
        "end": {
          "line": 35,
          "column": 9
        }
      },
      "13": {
        "start": {
          "line": 36,
          "column": 8
        },
        "end": {
          "line": 36,
          "column": 41
        }
      },
      "14": {
        "start": {
          "line": 37,
          "column": 8
        },
        "end": {
          "line": 37,
          "column": 100
        }
      },
      "15": {
        "start": {
          "line": 38,
          "column": 8
        },
        "end": {
          "line": 38,
          "column": 21
        }
      },
      "16": {
        "start": {
          "line": 41,
          "column": 22
        },
        "end": {
          "line": 43,
          "column": 13
        }
      },
      "17": {
        "start": {
          "line": 42,
          "column": 12
        },
        "end": {
          "line": 42,
          "column": 54
        }
      },
      "18": {
        "start": {
          "line": 45,
          "column": 8
        },
        "end": {
          "line": 45,
          "column": 45
        }
      },
      "19": {
        "start": {
          "line": 48,
          "column": 22
        },
        "end": {
          "line": 48,
          "column": 41
        }
      },
      "20": {
        "start": {
          "line": 49,
          "column": 8
        },
        "end": {
          "line": 51,
          "column": 9
        }
      },
      "21": {
        "start": {
          "line": 50,
          "column": 12
        },
        "end": {
          "line": 50,
          "column": 61
        }
      },
      "22": {
        "start": {
          "line": 52,
          "column": 8
        },
        "end": {
          "line": 52,
          "column": 30
        }
      },
      "23": {
        "start": {
          "line": 53,
          "column": 8
        },
        "end": {
          "line": 53,
          "column": 64
        }
      },
      "24": {
        "start": {
          "line": 54,
          "column": 8
        },
        "end": {
          "line": 54,
          "column": 21
        }
      },
      "25": {
        "start": {
          "line": 57,
          "column": 27
        },
        "end": {
          "line": 58,
          "column": 53
        }
      },
      "26": {
        "start": {
          "line": 58,
          "column": 29
        },
        "end": {
          "line": 58,
          "column": 52
        }
      },
      "27": {
        "start": {
          "line": 59,
          "column": 8
        },
        "end": {
          "line": 59,
          "column": 26
        }
      },
      "28": {
        "start": {
          "line": 62,
          "column": 0
        },
        "end": {
          "line": 62,
          "column": 36
        }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": {
            "line": 9,
            "column": 4
          },
          "end": {
            "line": 9,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 9,
            "column": 18
          },
          "end": {
            "line": 12,
            "column": 5
          }
        },
        "line": 9
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": {
            "line": 13,
            "column": 4
          },
          "end": {
            "line": 13,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 13,
            "column": 27
          },
          "end": {
            "line": 20,
            "column": 5
          }
        },
        "line": 13
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": {
          "start": {
            "line": 21,
            "column": 4
          },
          "end": {
            "line": 21,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 21,
            "column": 33
          },
          "end": {
            "line": 39,
            "column": 5
          }
        },
        "line": 21
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": {
          "start": {
            "line": 40,
            "column": 4
          },
          "end": {
            "line": 40,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 40,
            "column": 31
          },
          "end": {
            "line": 46,
            "column": 5
          }
        },
        "line": 40
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": {
          "start": {
            "line": 41,
            "column": 35
          },
          "end": {
            "line": 41,
            "column": 36
          }
        },
        "loc": {
          "start": {
            "line": 41,
            "column": 50
          },
          "end": {
            "line": 43,
            "column": 9
          }
        },
        "line": 41
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": {
          "start": {
            "line": 47,
            "column": 4
          },
          "end": {
            "line": 47,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 47,
            "column": 40
          },
          "end": {
            "line": 55,
            "column": 5
          }
        },
        "line": 47
      },
      "6": {
        "name": "(anonymous_6)",
        "decl": {
          "start": {
            "line": 56,
            "column": 4
          },
          "end": {
            "line": 56,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 56,
            "column": 34
          },
          "end": {
            "line": 60,
            "column": 5
          }
        },
        "line": 56
      },
      "7": {
        "name": "(anonymous_7)",
        "decl": {
          "start": {
            "line": 58,
            "column": 20
          },
          "end": {
            "line": 58,
            "column": 21
          }
        },
        "loc": {
          "start": {
            "line": 58,
            "column": 29
          },
          "end": {
            "line": 58,
            "column": 52
          }
        },
        "line": 58
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": {
            "line": 16,
            "column": 8
          },
          "end": {
            "line": 18,
            "column": 9
          }
        },
        "type": "if",
        "locations": [
          {
            "start": {
              "line": 16,
              "column": 8
            },
            "end": {
              "line": 18,
              "column": 9
            }
          },
          {
            "start": {},
            "end": {}
          }
        ],
        "line": 16
      },
      "1": {
        "loc": {
          "start": {
            "line": 23,
            "column": 8
          },
          "end": {
            "line": 25,
            "column": 9
          }
        },
        "type": "if",
        "locations": [
          {
            "start": {
              "line": 23,
              "column": 8
            },
            "end": {
              "line": 25,
              "column": 9
            }
          },
          {
            "start": {},
            "end": {}
          }
        ],
        "line": 23
      },
      "2": {
        "loc": {
          "start": {
            "line": 23,
            "column": 12
          },
          "end": {
            "line": 23,
            "column": 81
          }
        },
        "type": "binary-expr",
        "locations": [
          {
            "start": {
              "line": 23,
              "column": 12
            },
            "end": {
              "line": 23,
              "column": 29
            }
          },
          {
            "start": {
              "line": 23,
              "column": 33
            },
            "end": {
              "line": 23,
              "column": 49
            }
          },
          {
            "start": {
              "line": 23,
              "column": 53
            },
            "end": {
              "line": 23,
              "column": 81
            }
          }
        ],
        "line": 23
      },
      "3": {
        "loc": {
          "start": {
            "line": 49,
            "column": 8
          },
          "end": {
            "line": 51,
            "column": 9
          }
        },
        "type": "if",
        "locations": [
          {
            "start": {
              "line": 49,
              "column": 8
            },
            "end": {
              "line": 51,
              "column": 9
            }
          },
          {
            "start": {},
            "end": {}
          }
        ],
        "line": 49
      }
    },
    "s": {
      "0": 1,
      "1": 1,
      "2": 2,
      "3": 2,
      "4": 3,
      "5": 3,
      "6": 3,
      "7": 1,
      "8": 2,
      "9": 6,
      "10": 0,
      "11": 6,
      "12": 6,
      "13": 6,
      "14": 6,
      "15": 6,
      "16": 6,
      "17": 8,
      "18": 6,
      "19": 1,
      "20": 1,
      "21": 0,
      "22": 1,
      "23": 1,
      "24": 1,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 1
    },
    "f": {
      "0": 2,
      "1": 3,
      "2": 6,
      "3": 6,
      "4": 8,
      "5": 1,
      "6": 0,
      "7": 0
    },
    "b": {
      "0": [
        1,
        2
      ],
      "1": [
        0,
        6
      ],
      "2": [
        6,
        6,
        6
      ],
      "3": [
        0,
        1
      ]
    },
    "inputSourceMap": {
      "file": "/Users/psturc/dev/tia-js/examples/basic-jest/src/order-service.ts",
      "mappings": ";AAAA;;;GAGG;;;AAiBH,MAAa,YAAY;IAAzB;QACU,WAAM,GAAuB,IAAI,GAAG,EAAE,CAAC;QACvC,WAAM,GAAG,CAAC,CAAC;IAgErB,CAAC;IA9DC,KAAK,CAAC,YAAY,CAAC,EAAU;QAC3B,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,EAAE,CAAC,CAAC;QAE7C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;QACnD,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,SAAiD;QACjE,sBAAsB;QACtB,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC1E,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;QAED,kBAAkB;QAClB,MAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAExD,MAAM,KAAK,GAAU;YACnB,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE;YACjB,MAAM,EAAE,SAAS,CAAC,MAAM;YACxB,KAAK,EAAE,SAAS,CAAC,KAAK;YACtB,KAAK;YACL,MAAM,EAAE,SAAS;YACjB,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;SACpC,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QACjC,OAAO,CAAC,GAAG,CAAC,kBAAkB,KAAK,CAAC,EAAE,aAAa,KAAK,CAAC,MAAM,aAAa,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;QAE5F,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,mBAAmB,CAAC,KAAkB;QAC5C,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;YACvC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5C,CAAC,EAAE,CAAC,CAAC,CAAC;QAEN,qEAAqE;QACrE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,EAAU,EAAE,MAAuB;QACzD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;QACnD,CAAC;QAED,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,eAAe,MAAM,EAAE,CAAC,CAAC;QAExD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,MAAc;QAClC,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;aAChD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;QAE5C,OAAO,UAAU,CAAC;IACpB,CAAC;CACF;AAlED,oCAkEC",
      "names": [],
      "sources": [
        "/Users/psturc/dev/tia-js/examples/basic-jest/src/order-service.ts"
      ],
      "sourcesContent": [
        "/**\n * Order Service - Business logic for order management  \n * This should only be covered by order-related tests\n */\n\nexport interface Order {\n  id: number;\n  userId: number;\n  items: OrderItem[];\n  total: number;\n  status: 'pending' | 'completed' | 'cancelled';\n  createdAt: string;\n}\n\nexport interface OrderItem {\n  productId: number;\n  quantity: number;\n  price: number;\n}\n\nexport class OrderService {\n  private orders: Map<number, Order> = new Map();\n  private nextId = 1;\n\n  async getOrderById(id: number): Promise<Order> {\n    console.log(`Fetching order with ID: ${id}`);\n    \n    const order = this.orders.get(id);\n    if (!order) {\n      throw new Error(`Order with ID ${id} not found`);\n    }\n    \n    return order;\n  }\n\n  async createOrder(orderData: { userId: number; items: OrderItem[] }): Promise<Order> {\n    // Validate order data\n    if (!orderData.userId || !orderData.items || orderData.items.length === 0) {\n      throw new Error('User ID and items are required');\n    }\n\n    // Calculate total\n    const total = this.calculateOrderTotal(orderData.items);\n\n    const order: Order = {\n      id: this.nextId++,\n      userId: orderData.userId,\n      items: orderData.items,\n      total,\n      status: 'pending',\n      createdAt: new Date().toISOString()\n    };\n\n    this.orders.set(order.id, order);\n    console.log(`Created order: ${order.id} for user ${order.userId} (total: $${order.total})`);\n    \n    return order;\n  }\n\n  private calculateOrderTotal(items: OrderItem[]): number {\n    const total = items.reduce((sum, item) => {\n      return sum + (item.price * item.quantity);\n    }, 0);\n    \n    // Round to 2 decimal places to avoid floating point precision issues\n    return Math.round(total * 100) / 100;\n  }\n\n  async updateOrderStatus(id: number, status: Order['status']): Promise<Order> {\n    const order = this.orders.get(id);\n    if (!order) {\n      throw new Error(`Order with ID ${id} not found`);\n    }\n\n    order.status = status;\n    console.log(`Updated order ${id} status to: ${status}`);\n    \n    return order;\n  }\n\n  async getOrdersByUser(userId: number): Promise<Order[]> {\n    const userOrders = Array.from(this.orders.values())\n      .filter(order => order.userId === userId);\n    \n    return userOrders;\n  }\n}\n"
      ],
      "version": 3
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "69a9b4f8ba34d48d8d99cdc4a20663ca6ac6d92d"
  }
}